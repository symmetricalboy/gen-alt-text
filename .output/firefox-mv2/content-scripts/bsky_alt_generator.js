var bskyaltgenerator=function(){"use strict";var q=Object.defineProperty;var j=(v,p,d)=>p in v?q(v,p,{enumerable:!0,configurable:!0,writable:!0,value:d}):v[p]=d;var T=(v,p,d)=>j(v,typeof p!="symbol"?p+"":p,d);var G,N;function v(s){return s}const d=(N=(G=globalThis.browser)==null?void 0:G.runtime)!=null&&N.id?globalThis.browser:globalThis.chrome,D={matches:["*://*.bsky.app/*"],main(){if(console.log("Bluesky Alt Text Generator loaded"),typeof window>"u"||typeof document>"u")return;const t=['textarea[aria-label="Alt text"]','textarea[placeholder*="alt"]','textarea[placeholder*="Alt"]','textarea[data-testid*="alt"]','[role="textbox"][aria-label*="alt" i]'].join(","),r="gemini-alt-text-button",l=(o,n="info",i=8e3)=>{let a=document.getElementById("gemini-toast-container");a||(a=document.createElement("div"),a.id="gemini-toast-container",Object.assign(a.style,{position:"fixed",bottom:"20px",right:"20px",zIndex:"10000",display:"flex",flexDirection:"column",gap:"10px"}),document.body.appendChild(a));const c=document.createElement("div");Object.assign(c.style,{padding:"12px 16px",borderRadius:"6px",boxShadow:"0 2px 8px rgba(0, 0, 0, 0.15)",margin:"5px",minWidth:"200px",color:"#ffffff",fontSize:"14px",transition:"all 0.3s ease"});const e={success:"#1da882",error:"#e53935",warning:"#f59f0b",info:"#007eda"};c.style.backgroundColor=e[n]||e.info,c.textContent=o;const u=document.createElement("span");u.textContent="Ã—",Object.assign(u.style,{marginLeft:"8px",cursor:"pointer",float:"right",fontWeight:"bold"}),u.onclick=()=>{c.parentNode===a&&a.removeChild(c)},c.appendChild(u),a.appendChild(c),setTimeout(()=>{c.parentNode===a&&a.removeChild(c)},i)},g=o=>{console.log("[findMediaElement - Simplified] Searching for media in container:",o);const n=a=>{if(!a)return!1;const c=a.getBoundingClientRect();return c.width>0&&c.height>0&&a.offsetParent!==null},i=['[data-testid="imagePreview"] img[src]','[data-testid="images"] img[src]','[data-testid="videoPreview"] video[src]','[data-testid="videos"] video[src]','[data-testid="videoPreview"] video source[src]','[data-testid="videos"] video source[src]','img[src]:not([alt*="avatar" i]):not([src*="avatar"])',"video[src]","video source[src]"];for(const a of i){const c=o.querySelector(a);if(c instanceof HTMLSourceElement){const e=c.closest("video");if(e&&n(e))return console.log(`[findMediaElement - Simplified] Found video via source selector: ${a}`,e),e;continue}if(c&&n(c))return console.log(`[findMediaElement - Simplified] Found media via direct selector: ${a}`,c),c}return console.error("[findMediaElement - Simplified] FAILED: No suitable media found using direct selectors."),null},f=o=>{const n=[o.closest('[data-testid="composePostView"]'),o.closest('[role="dialog"][aria-label*="alt text" i]'),o.closest('[aria-label="Video settings"]')];for(const i of n)if(i)return console.log("[findComposerContainer] Found container:",i,"for element:",o),i;return console.warn("[findComposerContainer] Could not find a known composer/dialog container for element:",o),null},L=async o=>{try{let n="";if(o instanceof HTMLImageElement)n=o.currentSrc||o.src;else if(o instanceof HTMLVideoElement){const i=o.querySelector("source");n=(i==null?void 0:i.src)||o.src}if(!n)return console.error("[getMediaSource] Media element has no discernible src attribute.",o),null;if(n.startsWith("data:"))return console.log("[getMediaSource] Source is already a Data URL."),n;if(n.startsWith("blob:")){console.log("[getMediaSource] Source is a Blob URL, converting to Data URL...");const a=await(await fetch(n)).blob();return new Promise((c,e)=>{const u=new FileReader;u.onloadend=()=>c(u.result),u.onerror=e,u.readAsDataURL(a)})}else{if(n.startsWith("http:")||n.startsWith("https:"))return console.log("[getMediaSource] Source is an HTTP(S) URL:",n),n;if(console.warn("[getMediaSource] Unhandled src type:",n.substring(0,30)+"..."),o instanceof HTMLImageElement){console.log("[getMediaSource] Attempting canvas fallback for image src:",n);const i=document.createElement("canvas");i.width=o.naturalWidth||o.width,i.height=o.naturalHeight||o.height;const a=i.getContext("2d");if(!a)throw new Error("Could not get 2D context for image fallback");return a.drawImage(o,0,0),i.toDataURL()}return null}}catch(n){return console.error("[getMediaSource] Error processing media source:",n,o),l("Error processing media. It might be protected or inaccessible.","error"),null}};function x(o){if(o.dataset.geminiButtonAdded==="true")return;console.log("[addGenerateButton] Starting for textarea:",o);const n=f(o);if(!n){console.error("[addGenerateButton] Could not find the context container for the textarea. Button not added.");return}console.log("[addGenerateButton] Found context container for textarea:",n);let i=null;if(n.matches('[aria-label="Video settings"]')){if(console.log('[addGenerateButton] Context is "Video settings", searching document for [data-testid="composePostView"]...'),i=document.querySelector('[data-testid="composePostView"]'),!i){console.error('[addGenerateButton] Context is "Video settings", but failed to find [data-testid="composePostView"] in the document for media search.');return}console.log('[addGenerateButton] Context is "Video settings", found composePostView in document for media search:',i)}else i=n,n.matches('[role="dialog"][aria-label*="alt text" i]')?console.log('[addGenerateButton] Context is "Add alt text" dialog (likely GIF), targeting dialog for media search:',i):console.log("[addGenerateButton] Context is likely composePostView, targeting context container for media search:",i);const a=o.parentElement;if(!a){console.error("[addGenerateButton] Could not find textarea parentElement to attach button or check for existing.");return}if(a.querySelector(`#${r}`)){console.log("[addGenerateButton] Button already exists near the textarea attach point, marking textarea and skipping UI creation."),o.dataset.geminiButtonAdded="true";return}const c=document.createElement("div");Object.assign(c.style,{display:"flex",alignItems:"center",gap:"8px",marginTop:"4px",justifyContent:"flex-end"});const e=document.createElement("button");e.id=r,e.title="Generate Alt Text";const u=d.runtime.getURL("/icons/gen-alt-text.svg");e.innerHTML=`<img src="${u}" alt="Generate Alt Text Icon" width="20" height="20" style="display: block;">`,Object.assign(e.style,{marginLeft:"8px",padding:"4px",cursor:"pointer",border:"1px solid #ccc",borderRadius:"4px",backgroundColor:"#f0f0f0",display:"flex",alignItems:"center",justifyContent:"center"});const E=e.innerHTML,O=async()=>{if(e.innerHTML="",e.textContent="Finding Media...",e.style.color="#000000",e.disabled=!0,!i){console.error("[generateAltText] mediaSearchContainer is null! Cannot search for media."),e.textContent="Error: Internal",e.style.color="#000000",setTimeout(()=>{e.innerHTML=E,e.style.color="",e.disabled=!1},3e3);return}console.log("[generateAltText] Searching for media within determined media search container:",i);const m=g(i);if(console.log("[generateAltText] Media element found in search container:",m),!m||!(m instanceof HTMLImageElement||m instanceof HTMLVideoElement)){console.error("[generateAltText] Could not find valid media element."),e.textContent="Error: No Media",e.style.color="#000000",setTimeout(()=>{e.innerHTML=E,e.style.color="",e.disabled=!1},2e3);return}e.textContent="Processing Media...",e.style.color="#000000";const C=await L(m);if(!C){console.error("[generateAltText] Failed to get media source URL."),e.textContent="Error: Process Fail",e.style.color="#000000",setTimeout(()=>{e.innerHTML=E,e.style.color="",e.disabled=!1},3e3);return}const U=m.tagName==="VIDEO";console.log(`[generateAltText] Got ${U?"Video":"Image"} source (type: ${C.substring(0,C.indexOf(":"))}, length: ${C.length})`);try{console.log("[generateAltText] Connecting to background..."),e.textContent="Connecting...",e.style.color="#000000";const S=d.runtime.connect({name:"altTextGenerator"});console.log("[generateAltText] Connection established."),e.textContent="Generating...",e.style.color="#000000",S.onMessage.addListener(h=>{console.log("[generateAltText] Msg from background:",h);let b="",F=!1;if(h.altText)o.value=h.altText,o.dispatchEvent(new Event("input",{bubbles:!0,cancelable:!0})),b="âœ“ Done",l("Alt text generated! ðŸ¤– Double-check it before posting, AI can make mistakes.","success",8e3);else if(h.error){const V=typeof h.error=="string"?h.error:"Unknown error";b=`Error: ${V.substring(0,20)}...`,F=!0,l(`Error: ${V}`,"error")}else b="Msg Format Err",F=!0,console.error("[generateAltText] Unexpected message format:",h);e.textContent=b,e.style.color="#000000",setTimeout(()=>{e.innerHTML=E,e.style.color="",e.disabled=!1},F?3e3:1500);try{S.disconnect()}catch{}}),S.onDisconnect.addListener(()=>{const h=d.runtime.lastError;console.error("[generateAltText] Port disconnected.",h||"(No error info)");const b=e.textContent;b&&!b.includes("Done")&&!b.includes("Error")&&(e.textContent="Disconnect Err",e.style.color="#000000",setTimeout(()=>{e.innerHTML=E,e.style.color="",e.disabled=!1},3e3))}),console.log("[generateAltText] Sending message..."),S.postMessage({action:"generateAltText",mediaUrl:C,isVideo:U}),console.log("[generateAltText] Message sent.")}catch(S){console.error("[generateAltText] Connect/Post error:",S),e.textContent="Connect Error",e.style.color="#000000",setTimeout(()=>{e.innerHTML=E,e.style.color="",e.disabled=!1},2e3)}};e.addEventListener("click",m=>{m.preventDefault(),m.stopPropagation(),O()}),c.appendChild(e),a.insertAdjacentElement("afterend",c),o.dataset.geminiButtonAdded="true",console.log("[addGenerateButton] Button added successfully after textarea parent:",a)}let I=null;const R=()=>{I&&I.disconnect(),console.log("[observeAltTextAreas] Starting observer for manual button injection."),document.querySelectorAll(t).forEach(x),I=new MutationObserver(o=>{for(const n of o)n.type==="childList"&&n.addedNodes.forEach(i=>{i instanceof HTMLElement&&(i.matches(t)&&x(i),i.querySelectorAll(t).forEach(x))}),n.type==="attributes"&&n.target instanceof HTMLElement&&n.target.matches(t)&&x(n.target)}),I.observe(document.body,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["aria-label","placeholder","data-testid","role"]}),console.log("[observeAltTextAreas] Observer attached to document body.")};document.readyState==="loading"?document.addEventListener("DOMContentLoaded",R):R(),console.log("Bluesky Alt Text Generator content script setup complete.")}};function w(s,...t){}const H={debug:(...s)=>w(console.debug,...s),log:(...s)=>w(console.log,...s),warn:(...s)=>w(console.warn,...s),error:(...s)=>w(console.error,...s)},M=class M extends Event{constructor(t,r){super(M.EVENT_NAME,{}),this.newUrl=t,this.oldUrl=r}};T(M,"EVENT_NAME",P("wxt:locationchange"));let k=M;function P(s){var t;return`${(t=d==null?void 0:d.runtime)==null?void 0:t.id}:bsky_alt_generator:${s}`}function _(s){let t,r;return{run(){t==null&&(r=new URL(location.href),t=s.setInterval(()=>{let l=new URL(location.href);l.href!==r.href&&(window.dispatchEvent(new k(l,r)),r=l)},1e3))}}}const y=class y{constructor(t,r){T(this,"isTopFrame",window.self===window.top);T(this,"abortController");T(this,"locationWatcher",_(this));T(this,"receivedMessageIds",new Set);this.contentScriptName=t,this.options=r,this.abortController=new AbortController,this.isTopFrame?(this.listenForNewerScripts({ignoreFirstEvent:!0}),this.stopOldScripts()):this.listenForNewerScripts()}get signal(){return this.abortController.signal}abort(t){return this.abortController.abort(t)}get isInvalid(){return d.runtime.id==null&&this.notifyInvalidated(),this.signal.aborted}get isValid(){return!this.isInvalid}onInvalidated(t){return this.signal.addEventListener("abort",t),()=>this.signal.removeEventListener("abort",t)}block(){return new Promise(()=>{})}setInterval(t,r){const l=setInterval(()=>{this.isValid&&t()},r);return this.onInvalidated(()=>clearInterval(l)),l}setTimeout(t,r){const l=setTimeout(()=>{this.isValid&&t()},r);return this.onInvalidated(()=>clearTimeout(l)),l}requestAnimationFrame(t){const r=requestAnimationFrame((...l)=>{this.isValid&&t(...l)});return this.onInvalidated(()=>cancelAnimationFrame(r)),r}requestIdleCallback(t,r){const l=requestIdleCallback((...g)=>{this.signal.aborted||t(...g)},r);return this.onInvalidated(()=>cancelIdleCallback(l)),l}addEventListener(t,r,l,g){var f;r==="wxt:locationchange"&&this.isValid&&this.locationWatcher.run(),(f=t.addEventListener)==null||f.call(t,r.startsWith("wxt:")?P(r):r,l,{...g,signal:this.signal})}notifyInvalidated(){this.abort("Content script context invalidated"),H.debug(`Content script "${this.contentScriptName}" context invalidated`)}stopOldScripts(){window.postMessage({type:y.SCRIPT_STARTED_MESSAGE_TYPE,contentScriptName:this.contentScriptName,messageId:Math.random().toString(36).slice(2)},"*")}verifyScriptStartedEvent(t){var f,L,x;const r=((f=t.data)==null?void 0:f.type)===y.SCRIPT_STARTED_MESSAGE_TYPE,l=((L=t.data)==null?void 0:L.contentScriptName)===this.contentScriptName,g=!this.receivedMessageIds.has((x=t.data)==null?void 0:x.messageId);return r&&l&&g}listenForNewerScripts(t){let r=!0;const l=g=>{if(this.verifyScriptStartedEvent(g)){this.receivedMessageIds.add(g.data.messageId);const f=r;if(r=!1,f&&(t!=null&&t.ignoreFirstEvent))return;this.notifyInvalidated()}};addEventListener("message",l),this.onInvalidated(()=>removeEventListener("message",l))}};T(y,"SCRIPT_STARTED_MESSAGE_TYPE",P("wxt:content-script-started"));let B=y;function W(){}function A(s,...t){}const $={debug:(...s)=>A(console.debug,...s),log:(...s)=>A(console.log,...s),warn:(...s)=>A(console.warn,...s),error:(...s)=>A(console.error,...s)};return(async()=>{try{const{main:s,...t}=D,r=new B("bsky_alt_generator",t);return await s(r)}catch(s){throw $.error('The content script "bsky_alt_generator" crashed on startup!',s),s}})()}();
bskyaltgenerator;
