var bskyaltgenerator=function(){"use strict";var J=Object.defineProperty;var K=(w,E,f)=>E in w?J(w,E,{enumerable:!0,configurable:!0,writable:!0,value:f}):w[E]=f;var T=(w,E,f)=>K(w,typeof E!="symbol"?E+"":E,f);var $,_;function w(l){return l}const f=(_=($=globalThis.browser)==null?void 0:$.runtime)!=null&&_.id?globalThis.browser:globalThis.chrome,q={matches:["*://*.bsky.app/*"],main(){if(console.log("Bluesky Alt Text Generator loaded"),typeof window>"u"||typeof document>"u")return;const r=['textarea[aria-label="Alt text"]','textarea[placeholder*="alt"]','textarea[placeholder*="Alt"]','textarea[data-testid*="alt"]','[role="textbox"][aria-label*="alt" i]'].join(","),s="gemini-alt-text-button",d='[data-testid="composer"]',m='input[type="file"][aria-label*="media" i]',p=d;let u={autoMode:!1,showToasts:!0};async function S(){try{const o=await f.storage.local.get(["autoMode","showToasts"]);o&&(u={...u,...o}),console.log("Loaded config:",u)}catch(o){console.error("Error loading config from storage:",o)}}S(),f.storage.onChanged.addListener((o,n)=>{if(n==="local"){let i=!1;o.autoMode&&(u.autoMode=o.autoMode.newValue,i=!0),o.showToasts&&(u.showToasts=o.showToasts.newValue,i=!0),i&&console.log("Updated config via storage listener:",u)}});const B=o=>{if(!(!o||o.length===0)){console.log(`Intercepted ${o.length} file(s)`);for(const n of o){if(!n.type.startsWith("image/")&&!n.type.startsWith("video/")){console.log(`Skipping non-media file: ${n.name} (${n.type})`);continue}const i=new FileReader;i.onload=t=>{var a;const e=(a=t.target)==null?void 0:a.result;typeof e=="string"?(console.log(`Read file ${n.name} (${n.type}), sending to background...`),f.runtime.sendMessage({type:"MEDIA_INTERCEPTED",payload:{filename:n.name,filetype:n.type,dataUrl:e,size:n.size}}).then(c=>{console.log("Background script responded to MEDIA_INTERCEPTED:",c)}).catch(c=>{console.error("Error sending MEDIA_INTERCEPTED message or receiving response:",c)}),u.showToasts&&F(`Captured ${n.name}`,"info",2e3)):console.error(`Failed to read file ${n.name} as Base64 Data URL.`)},i.onerror=t=>{console.error(`Error reading file ${n.name}:`,t)},i.readAsDataURL(n)}}},F=(o,n="info",i=5e3)=>{let t=document.getElementById("gemini-toast-container");t||(t=document.createElement("div"),t.id="gemini-toast-container",Object.assign(t.style,{position:"fixed",bottom:"20px",right:"20px",zIndex:"10000",display:"flex",flexDirection:"column",gap:"10px"}),document.body.appendChild(t));const e=document.createElement("div");Object.assign(e.style,{padding:"12px 16px",borderRadius:"6px",boxShadow:"0 2px 8px rgba(0, 0, 0, 0.15)",margin:"5px",minWidth:"200px",color:"#ffffff",fontSize:"14px",transition:"all 0.3s ease"});const a={success:"#1da882",error:"#e53935",warning:"#f59f0b",info:"#007eda"};e.style.backgroundColor=a[n]||a.info,e.textContent=o;const c=document.createElement("span");c.textContent="×",Object.assign(c.style,{marginLeft:"8px",cursor:"pointer",float:"right",fontWeight:"bold"}),c.onclick=()=>{e.parentNode===t&&t.removeChild(e)},e.appendChild(c),t.appendChild(e),setTimeout(()=>{e.parentNode===t&&t.removeChild(e)},i)},Z=o=>{console.log("[findMediaElement - Simplified] Searching for media in container:",o);const n=t=>{if(!t)return!1;const e=t.getBoundingClientRect();return e.width>0&&e.height>0&&t.offsetParent!==null},i=['[data-testid="imagePreview"] img[src]','[data-testid="images"] img[src]','[data-testid="videoPreview"] video[src]','[data-testid="videos"] video[src]','[data-testid="videoPreview"] video source[src]','[data-testid="videos"] video source[src]','img[src]:not([alt*="avatar" i]):not([src*="avatar"])',"video[src]","video source[src]"];for(const t of i){const e=o.querySelector(t);if(e instanceof HTMLSourceElement){const a=e.closest("video");if(a&&n(a))return console.log(`[findMediaElement - Simplified] Found video via source selector: ${t}`,a),a;console.warn(`[findMediaElement - Simplified] Found source tag but parent video hidden/invalid: ${t}`,e);continue}if(e&&n(e))return console.log(`[findMediaElement - Simplified] Found media via direct selector: ${t}`,e),e;e&&console.warn(`[findMediaElement - Simplified] Media found but hidden/too small with selector: ${t}`,e)}return console.error("[findMediaElement - Simplified] FAILED: No suitable media found using direct selectors."),null};async function X(o){if(!o||!o.src)return console.warn("[getMediaAsDataUrl] Invalid element or src"),null;const n=o.src;if(n.startsWith("data:"))return console.log("[getMediaAsDataUrl] Source is already Data URL"),n;if(n.startsWith("blob:")||n.startsWith("http")){console.log("[getMediaAsDataUrl] Fetching source URL:",n);try{const i=await fetch(n);if(!i.ok)throw new Error(`Failed to fetch media URL: ${i.statusText} (${i.status})`);const t=await i.blob();return console.log("[getMediaAsDataUrl] Fetched blob, type:",t.type),new Promise((e,a)=>{const c=new FileReader;c.onloadend=()=>{typeof c.result=="string"?(console.log("[getMediaAsDataUrl] Blob converted to base64 Data URL"),e(c.result)):a(new Error("Blob reader result was not a string."))},c.onerror=h=>{console.error("[getMediaAsDataUrl] FileReader error:",h),a(new Error("FileReader error reading blob."))},c.readAsDataURL(t)})}catch(i){return console.error("[getMediaAsDataUrl] Error fetching or converting URL:",i),null}}else return console.warn("[getMediaAsDataUrl] Unhandled URL scheme:",n),null}function I(o){if(o.dataset.geminiButtonAdded==="true")return;console.log("[addGenerateButton] Starting for textarea:",o);const n=V(o);if(!n){console.error("[addGenerateButton] Could not find the main composer container using findComposerContainer. Button will not be added or may not function correctly.");return}if(console.log("[addGenerateButton] Found composer container:",n),n.querySelector(`#${s}`)){console.log("[addGenerateButton] Button already exists in this composer container, marking textarea and skipping UI creation."),o.dataset.geminiButtonAdded="true";return}const i=o.parentElement;if(!i){console.error("[addGenerateButton] Could not find a suitable attach point (parentElement) for the button UI near the textarea.");return}const t=document.createElement("div");Object.assign(t.style,{display:"flex",alignItems:"center",gap:"8px",marginTop:"4px",justifyContent:"flex-end"});const e=document.createElement("button");e.id=s,e.title="Generate Alt Text",e.innerHTML='<svg width="20" height="20" viewBox="-5 -10 128 128" xmlns="http://www.w3.org/2000/svg"><path d="M 35.746,4 C 20.973,4 9,15.973 9,30.746 V 77.254 C 9,92.027 20.973,104 35.746,104 H 82.254 C 97.027,104 109,92.027 109,77.254 V 30.746 C 109,15.973 97.027,4 82.254,4 Z m -19.77,26.746 c 0,-10.918 8.8516,-19.77 19.77,-19.77 h 46.508 c 10.918,0 19.77,8.8516 19.77,19.77 v 46.508 c 0,10.918 -8.8516,19.77 -19.77,19.77 H 35.746 c -10.918,0 -19.77,-8.8516 -19.77,-19.77 z m 45.609,0.37891 c -1.082,-2.1055 -4.0898,-2.1055 -5.1719,0 l -4.3242,8.4219 c -1.668,3.2383 -4.3047,5.875 -7.543,7.543 l -8.4219,4.3242 c -2.1055,1.082 -2.1055,4.0898 0,5.1719 l 8.4219,4.3242 c 3.2383,1.668 5.875,4.3047 7.543,7.543 l 4.3242,8.4219 c 1.082,2.1055 4.0898,2.1055 5.1719,0 l 4.3242,-8.4219 c 1.668,-3.2383 4.3047,-5.875 7.543,-7.543 l 8.4219,-4.3242 c 2.1055,-1.082 2.1055,-4.0898 0,-5.1719 l -8.4219,-4.3242 c -3.2383,-1.668 -5.875,-4.3047 -7.543,-7.543 z" fill="#323248" stroke="none" /></svg>',Object.assign(e.style,{marginLeft:"8px",padding:"4px",cursor:"pointer",border:"1px solid #ccc",borderRadius:"4px",backgroundColor:"#f0f0f0",display:"flex",alignItems:"center",justifyContent:"center"}),e.style.setProperty("visibility","visible","important"),e.style.setProperty("z-index","9999","important"),e.style.setProperty("position","relative","important");const a=e.innerHTML,c=document.createElement("label");c.className="gemini-auto-toggle",c.title="Auto-generate alt text when media is added",Object.assign(c.style,{display:"flex",alignItems:"center",fontSize:"12px",cursor:"pointer"});const h=document.createElement("input");h.type="checkbox",h.style.margin="0 4px 0 0",h.checked=u.autoMode,h.addEventListener("change",async g=>{if(g.target instanceof HTMLInputElement){u.autoMode=g.target.checked;try{await f.storage.local.set({...u,autoMode:u.autoMode}),console.log("Saved autoMode setting:",u.autoMode)}catch(x){console.error("Error saving autoMode setting:",x)}}}),c.appendChild(h),c.appendChild(document.createTextNode("Auto")),t.appendChild(e),t.appendChild(c);const D=async()=>{e.innerHTML="",e.textContent="Finding Media...",e.disabled=!0,console.log("[generateAltText] Searching for media within confirmed composer container:",n);const g=Z(n);if(console.log("[generateAltText] Media element found in composer:",g),!g||!(g instanceof HTMLImageElement||g instanceof HTMLVideoElement)){console.error("[generateAltText] Could not find valid media element."),e.textContent="Error: No Media",setTimeout(()=>{e.innerHTML=a,e.disabled=!1},2e3);return}e.textContent="Processing Media...";const x=await X(g);if(!x){console.error("[generateAltText] Failed to get media as Data URL."),e.textContent="Error: Process Fail",setTimeout(()=>{e.innerHTML=a,e.disabled=!1},3e3);return}const H=g.tagName==="VIDEO";console.log(`[generateAltText] Got ${H?"Video":"Image"} as Data URL (length: ${x.length})`);try{console.log("[generateAltText] Connecting to background..."),e.textContent="Connecting...";const y=f.runtime.connect({name:"altTextGenerator"});console.log("[generateAltText] Connection established."),e.textContent="Generating...",y.onMessage.addListener(b=>{console.log("[generateAltText] Msg from background:",b);let v="",O=!1;if(b.altText)o.value=b.altText,o.dispatchEvent(new Event("input",{bubbles:!0,cancelable:!0})),v="✓ Done",u.showToasts&&F("Alt text generated! Please review.","success");else if(b.error){const k=typeof b.error=="string"?b.error:"Unknown error";v=`Error: ${k.substring(0,20)}...`,O=!0,u.showToasts&&F(`Error: ${k}`,"error")}else v="Msg Format Err",O=!0,console.error("[generateAltText] Unexpected message format:",b);e.textContent=v,setTimeout(()=>{e.innerHTML=a,e.disabled=!1},O?3e3:1500);try{y.disconnect()}catch{}}),y.onDisconnect.addListener(()=>{const b=f.runtime.lastError;console.error("[generateAltText] Port disconnected.",b||"(No error info)");const v=e.textContent;v&&!v.includes("Done")&&!v.includes("Error")&&(e.textContent="Disconnect Err",setTimeout(()=>{e.innerHTML=a,e.disabled=!1},3e3))}),console.log("[generateAltText] Sending message..."),y.postMessage({action:"generateAltText",imageUrl:x,isVideo:H}),console.log("[generateAltText] Message sent.")}catch(y){console.error("[generateAltText] Connect/Post error:",y),e.textContent="Connect Error",setTimeout(()=>{e.innerHTML=a,e.disabled=!1},2e3)}};e.onclick=async g=>{g.preventDefault(),g.stopPropagation(),console.log("[addGenerateButton] Button clicked"),await D()},i.insertAdjacentElement("afterend",t),o.dataset.geminiButtonAdded="true",console.log("[addGenerateButton] Button UI setup complete and attached.")}function V(o){console.log("[findComposerContainer] Searching from:",o);const n=['[data-testid="composePostView"]','[aria-label="Add alt text"]','[aria-label="Video settings"]'];for(const i of n){const t=o.closest(i);if(t&&t.contains(o))return console.log("[findComposerContainer] Found valid container via specific selector:",i,t),t}return console.error("[findComposerContainer] Failed to find any container using specific selectors:",n.join(", ")),null}const Y=()=>{new MutationObserver(n=>{if(u.autoMode)for(const i of n)i.type==="childList"&&i.addedNodes.forEach(t=>{if(t instanceof HTMLElement){const e=a=>{var c;if((a.tagName==="IMG"||a.tagName==="VIDEO")&&!((c=a.getAttribute("alt"))!=null&&c.includes("avatar"))){console.log("Auto-gen: Media element detected:",a);const h=V(a);h&&setTimeout(()=>{const D=h.querySelector(r);if(D){I(D);const g=h.querySelector(`#${s}`);g&&!g.disabled&&(console.log("Auto-generating alt text for:",a),g.click())}else console.log("Auto-gen: No alt text field found yet for media:",a)},500)}};e(t),t.querySelectorAll("img, video").forEach(e)}})}).observe(document.body,{childList:!0,subtree:!0}),console.log("Media observer started for auto-generation.")};document.querySelectorAll(r).forEach(I),new MutationObserver(o=>{console.log("Main observer triggered.");for(const n of o)n.type==="childList"&&n.addedNodes.forEach(i=>{i instanceof Element&&(i.matches(r)&&I(i),i.querySelectorAll(r).forEach(I))})}).observe(document.body,{childList:!0,subtree:!0}),Y();const P=o=>{console.log("[attachMediaListeners] Attaching to:",o);const n=o.querySelector(m),i=o.closest(p)||(o instanceof HTMLElement?o:null),t=n;t&&!t.dataset.mediaListenerAttached?(t.addEventListener("change",a=>{a.target instanceof HTMLInputElement&&(console.log("[attachMediaListeners] File input CHANGED"),B(a.target.files))}),t.dataset.mediaListenerAttached="true",console.log("[attachMediaListeners] Change listener attached to file input.")):t?console.log("[attachMediaListeners] Change listener already attached to file input."):console.warn("[attachMediaListeners] Could not find file input using selector:",m,"within:",o);const e=i;e&&!e.dataset.dropListenerAttached?(e.addEventListener("dragover",a=>{a.preventDefault(),a.stopPropagation()}),e.addEventListener("drop",a=>{var c;a.preventDefault(),a.stopPropagation(),console.log("[attachMediaListeners] DROP event detected"),(c=a.dataTransfer)!=null&&c.files&&B(a.dataTransfer.files)}),e.dataset.dropListenerAttached="true",console.log("[attachMediaListeners] Drop/Dragover listeners attached to drop zone:",e)):e?console.log("[attachMediaListeners] Drop/Dragover listeners already attached."):console.warn("[attachMediaListeners] Could not find drop zone using selector:",p)},G=()=>{console.log("Setting up observer for composer elements..."),new MutationObserver(n=>{for(const i of n)i.type==="childList"&&i.addedNodes.forEach(t=>{t instanceof Element&&(t.matches(d)&&(console.log("Composer added directly:",t),P(t)),t.querySelectorAll(d).forEach(e=>{console.log("Composer found via querySelectorAll:",e),P(e)}))})}).observe(document.body,{childList:!0,subtree:!0}),console.log("Composer observer started."),document.querySelectorAll(d).forEach(P)};document.readyState==="complete"||document.readyState==="interactive"?G():document.addEventListener("DOMContentLoaded",G)}};function C(l,...r){}const j={debug:(...l)=>C(console.debug,...l),log:(...l)=>C(console.log,...l),warn:(...l)=>C(console.warn,...l),error:(...l)=>C(console.error,...l)},A=class A extends Event{constructor(r,s){super(A.EVENT_NAME,{}),this.newUrl=r,this.oldUrl=s}};T(A,"EVENT_NAME",U("wxt:locationchange"));let R=A;function U(l){var r;return`${(r=f==null?void 0:f.runtime)==null?void 0:r.id}:bsky_alt_generator:${l}`}function z(l){let r,s;return{run(){r==null&&(s=new URL(location.href),r=l.setInterval(()=>{let d=new URL(location.href);d.href!==s.href&&(window.dispatchEvent(new R(d,s)),s=d)},1e3))}}}const M=class M{constructor(r,s){T(this,"isTopFrame",window.self===window.top);T(this,"abortController");T(this,"locationWatcher",z(this));T(this,"receivedMessageIds",new Set);this.contentScriptName=r,this.options=s,this.abortController=new AbortController,this.isTopFrame?(this.listenForNewerScripts({ignoreFirstEvent:!0}),this.stopOldScripts()):this.listenForNewerScripts()}get signal(){return this.abortController.signal}abort(r){return this.abortController.abort(r)}get isInvalid(){return f.runtime.id==null&&this.notifyInvalidated(),this.signal.aborted}get isValid(){return!this.isInvalid}onInvalidated(r){return this.signal.addEventListener("abort",r),()=>this.signal.removeEventListener("abort",r)}block(){return new Promise(()=>{})}setInterval(r,s){const d=setInterval(()=>{this.isValid&&r()},s);return this.onInvalidated(()=>clearInterval(d)),d}setTimeout(r,s){const d=setTimeout(()=>{this.isValid&&r()},s);return this.onInvalidated(()=>clearTimeout(d)),d}requestAnimationFrame(r){const s=requestAnimationFrame((...d)=>{this.isValid&&r(...d)});return this.onInvalidated(()=>cancelAnimationFrame(s)),s}requestIdleCallback(r,s){const d=requestIdleCallback((...m)=>{this.signal.aborted||r(...m)},s);return this.onInvalidated(()=>cancelIdleCallback(d)),d}addEventListener(r,s,d,m){var p;s==="wxt:locationchange"&&this.isValid&&this.locationWatcher.run(),(p=r.addEventListener)==null||p.call(r,s.startsWith("wxt:")?U(s):s,d,{...m,signal:this.signal})}notifyInvalidated(){this.abort("Content script context invalidated"),j.debug(`Content script "${this.contentScriptName}" context invalidated`)}stopOldScripts(){window.postMessage({type:M.SCRIPT_STARTED_MESSAGE_TYPE,contentScriptName:this.contentScriptName,messageId:Math.random().toString(36).slice(2)},"*")}verifyScriptStartedEvent(r){var p,u,S;const s=((p=r.data)==null?void 0:p.type)===M.SCRIPT_STARTED_MESSAGE_TYPE,d=((u=r.data)==null?void 0:u.contentScriptName)===this.contentScriptName,m=!this.receivedMessageIds.has((S=r.data)==null?void 0:S.messageId);return s&&d&&m}listenForNewerScripts(r){let s=!0;const d=m=>{if(this.verifyScriptStartedEvent(m)){this.receivedMessageIds.add(m.data.messageId);const p=s;if(s=!1,p&&(r!=null&&r.ignoreFirstEvent))return;this.notifyInvalidated()}};addEventListener("message",d),this.onInvalidated(()=>removeEventListener("message",d))}};T(M,"SCRIPT_STARTED_MESSAGE_TYPE",U("wxt:content-script-started"));let N=M;function Q(){}function L(l,...r){}const W={debug:(...l)=>L(console.debug,...l),log:(...l)=>L(console.log,...l),warn:(...l)=>L(console.warn,...l),error:(...l)=>L(console.error,...l)};return(async()=>{try{const{main:l,...r}=q,s=new N("bsky_alt_generator",r);return await l(s)}catch(l){throw W.error('The content script "bsky_alt_generator" crashed on startup!',l),l}})()}();
bskyaltgenerator;
