import browser from 'webextension-polyfill';

console.log('Bluesky Alt Text Generator loaded');

// Check if we're in a browser environment
if (typeof document !== 'undefined') {
  // Define the selector for alt text areas  
  const ALT_TEXT_SELECTOR = 'textarea[placeholder*="Alt text"], textarea[aria-label*="Alt text"]';
  
  // Function to add a generate button to alt text areas
  function addGenerateButton(textarea: HTMLTextAreaElement) {
    console.log('Found alt text area, would add button here', textarea);
  }
  
  // Initialize MutationObserver to watch for alt text areas being added
  const startObserver = () => {
    console.log('Starting observer');
    
    // Add buttons to any existing alt text areas
    document.querySelectorAll<HTMLTextAreaElement>(ALT_TEXT_SELECTOR)
      .forEach(addGenerateButton);
    
    // Watch for new alt text areas being added
    const observer = new MutationObserver((mutations) => {
      for (const mutation of mutations) {
        if (mutation.type === 'childList') {
          mutation.addedNodes.forEach(node => {
            if (node instanceof HTMLElement) {
              // Check if this node is an alt text area
              if (node.matches(ALT_TEXT_SELECTOR)) {
                addGenerateButton(node as HTMLTextAreaElement);
              }
              
              // Check for alt text areas within this node
              node.querySelectorAll<HTMLTextAreaElement>(ALT_TEXT_SELECTOR)
                .forEach(addGenerateButton);
            }
          });
        }
      }
    });
    
    // Start observing the document body
    observer.observe(document.body, {
      childList: true,
      subtree: true,
      attributes: false
    });
  };
  
  // Start the observer when the page is loaded
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', startObserver);
  } else {
    startObserver();
  }
} 